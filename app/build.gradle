apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "co.lateralview.myapp"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        jackOptions {
            enabled true
        }
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            buildConfigField "String", "BASE_URL", "\"https://base-url-for-debug\""
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "BASE_URL", "\"https://base-url-for-release\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def version_support = '25.3.0'
def version_dagger = '2.8'
def version_butterknife = '8.7.0'
def version_rxjava = '2.1.0'
def version_rxandroid = '2.0.1'
def version_leakcanary = '1.5'
def version_retrofit = '2.3.0'
def version_firebase = '11.0.2'
def version_permission = '3.0.1'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:recyclerview-v7:${version_support}"
    compile "com.android.support:design:${version_support}"
    compile "com.android.support:support-v13:${version_support}"
    compile "com.android.support:appcompat-v7:${version_support}"

    // Dagger 2 - Dependency Injection
    compile "com.google.dagger:dagger:$version_dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$version_dagger"

    // Butterknife - View binding
    compile "com.jakewharton:butterknife:$version_butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$version_butterknife"

    //Image Loader
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.2'

    //Instance State Handler
    compile 'frankiesardo:icepick:3.1.0'
    provided 'frankiesardo:icepick-processor:3.1.0'

    //Image Crop
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'

    //Reactive Programming
    compile "io.reactivex.rxjava2:rxjava:${version_rxjava}"
    compile "io.reactivex.rxjava2:rxandroid:${version_rxandroid}"

    // Leak Canary - memory leak detection
    compile "com.squareup.leakcanary:leakcanary-android:$version_leakcanary"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$version_leakcanary"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$version_leakcanary"

    // REST Client
    compile "com.squareup.retrofit2:retrofit:$version_retrofit"
    compile "com.squareup.retrofit2:converter-gson:$version_retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava2:$version_retrofit"
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // Stetho
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    //Firebase
    compile "com.google.firebase:firebase-core:$version_firebase"
    releaseCompile "com.google.firebase:firebase-crash:$version_firebase"

    //PermissionsDispatcher
    compile("com.github.hotchemi:permissionsdispatcher:$version_permission")
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:$version_permission"
}
